name: CI/CD

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]
  release:
    types: [ published ]

env:
  REGISTRY: docker.io
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}

jobs:
  avoid_redundancy:

    runs-on: ubuntu-latest

    steps:
      - name: cancel previous redundant builds
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - name: build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  coverage_report:

    needs: [ build ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: run coverage report
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jacocoTestReport

      - name: upload coverage report
        uses: codecov/codecov-action@v1

  publish:

    if: github.event_name == 'release'

    needs: [ build ]

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
          key: ${{ runner.os }}-gradle-test-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-test-

      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build

      - name: log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: setup GraalVM CE
        uses: graalvm/setup-graalvm@v1
        with:
          version: '22.1.0'
          java-version: '11'
          components: 'native-image'

      - name: build and test native image
        run: |
          if ./gradlew tasks --no-daemon --all | grep -w "testNativeImage"
          then
            ./gradlew check testNativeImage --continue --no-daemon
          else
            ./gradlew check --continue --no-daemon
          fi
        env:
          TESTCONTAINERS_RYUK_DISABLED: true

      - name: build and push native image
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
        run: |
          ./gradlew check dockerPushNative --no-daemon

  deploy:

    if: github.event_name == 'release'

    needs: [ publish ]

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'dew-org/k8s'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}

      - name: get tag
        id: get_tag
        run: |
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/v}

      - name: update deployment file
        run: |-
          sed -i.back "s/customers:0.1.0/customers:${{ steps.get_tag.outputs.SOURCE_TAG }}/g" customers/deployment.yml
      - name: deploy
        run: |-
          kubectl apply -f customers/deployment.yml
